---
# fixed_ha_control_plane.yml
- name: Set up high availability for Kubernetes control plane
  hosts: control_plane_nodes
  become: true
  gather_facts: true
  
  vars:
    k8s_api_port: 6443    # Standard Kubernetes API port
    k8s_ha_port: 16443    # HAProxy port for frontend - important for certificate validation
    k8s_api_vip: 10.8.18.2  # Virtual IP for the Kubernetes API server
  
  tasks:
    - name: Install HAProxy and Keepalived
      apt:
        name:
          - haproxy
          - keepalived
        state: present
        update_cache: yes
      
    # Use HAProxy config that binds to all interfaces on k8s_ha_port
    - name: Configure HAProxy
      template:
        src: templates/standard_haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        mode: '0644'
        validate: 'haproxy -c -f %s'
      register: haproxy_config
      
    # Use improved Keepalived config
    - name: Create Keepalived configuration
      template:
        src: templates/standard_keepalived.conf.j2
        dest: /etc/keepalived/keepalived.conf
        mode: '0644'
      register: keepalived_config
      
    # Add systemd dependency to ensure proper startup order
    - name: Create systemd override directory
      file:
        path: /etc/systemd/system/haproxy.service.d
        state: directory
        mode: '0755'

    - name: Ensure HAProxy starts after Keepalived
      copy:
        dest: /etc/systemd/system/haproxy.service.d/override.conf
        content: |
          [Unit]
          After=keepalived.service
          Requires=network-online.target
        mode: '0644'
      register: systemd_override
    
    - name: Reload systemd configurations
      systemd:
        daemon_reload: yes
      when: systemd_override is changed
    
    # Handle service restarts with proper dependency ordering
    - name: Restart Keepalived
      systemd:
        name: keepalived
        state: restarted
        enabled: yes
      when: keepalived_config.changed
    
    - name: Wait for VIP to be established
      wait_for:
        timeout: 5
      when: keepalived_config.changed or inventory_hostname == 'k8s-cp-01'
    
    - name: Restart HAProxy
      systemd:
        name: haproxy
        state: restarted
        enabled: yes
    
    # Verification steps
    - name: Check for VIP assignment
      shell: "ip addr show | grep {{ k8s_api_vip }}"
      register: vip_check
      changed_when: false
      failed_when: false
      
    - name: Show VIP status
      debug:
        msg: "VIP {{ 'is active' if vip_check.rc == 0 else 'is not active' }} on this node"
    
    # Important: Update kubeconfig to use the VIP with k8s_ha_port (16443) and disable certificate verification
    - name: Update kubeconfig to use the VIP (on k8s-cp-01 only)
      become_user: k8sadmin
      shell: |
        kubectl config set-cluster kubernetes --server=https://{{ k8s_api_vip }}:{{ k8s_ha_port }}
        kubectl config set-cluster kubernetes --insecure-skip-tls-verify=true
      environment:
        KUBECONFIG: /home/k8sadmin/.kube/config
      when: inventory_hostname == 'k8s-cp-01'
      register: kubeconfig_update
      
    - name: Display kubeconfig update result
      debug:
        msg: "{{ kubeconfig_update.stdout if kubeconfig_update is defined and kubeconfig_update.stdout is defined else 'No update needed' }}"
      when: inventory_hostname == 'k8s-cp-01'
      
    - name: Verify connection to Kubernetes API server using VIP
      become_user: k8sadmin
      shell: kubectl get nodes
      environment:
        KUBECONFIG: /home/k8sadmin/.kube/config
      register: kubectl_check
      when: inventory_hostname == 'k8s-cp-01'
      failed_when: false
      
    - name: Display kubectl check result
      debug:
        msg: "{{ kubectl_check.stdout_lines }}"
      when: inventory_hostname == 'k8s-cp-01'